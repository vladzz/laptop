---
- hosts: all

  vars:

    applications:
      - apptrap # remove associated prefs when uninstalling
      - appcode
      - appzapper # uninstaller
      - atom # sublime without annoying popup | https://atom.io/download/mac
      - bettertouchtool # window snapping. (maybe Moom is more lightweight?)
      #- caffeine # prevent mac from sleeping
      - cakebrew
      - calibre # berks
      - cyberduck # ftp, s3, openstack
      - dash # totally sick APIÂ browser
      - diffmerge # free visual diq
      - disk-inventory-x # reclaim space on your expensive-ass Apple SSD | http://www.derlien.com/
      - docker-toolbox
      - docker
      - flux # get more sleep
      - google-chrome
      - google-drive
      - hipchat
      - iterm2
      - iconjar
      - icons8
      - mounty
      - qlcolorcode # quick look syntax highlighting
      - qlimagesize # quick look image dimensions
      - qlmarkdown # quick look .md files
      - qlplayground
      - qlstephen # quick look extension-less text files
      - qlswift
      - qlvideo
      - reveal
      - sketch
      - skype #
      - sourcetree
      - spotify
      - steam
      - virtualbox # | https://www.virtualbox.org/
      - vlc
      - wordpresscom
      - zeplin

    install_oh_my_zsh:  true

    brew_taps:
      - caskroom/cask
      - caskroom/versions # for sublime-text3
      - homebrew/binary
      - homebrew/dupes # gnu grep
      - homebrew/versions

    dotfile_repo_username: glennr # the GH repo where your dotfiles are

    brew_utils:
      # - ansible #already installed by ./mac bootstrap script
      - bash # Bash 4
      - brew-cask
      - coreutils # Install GNU core utilities (those that come with OS X are outdated)
      - ctags
      - curl
      - docker # | https://docs.docker.com/installation/mac/
      #- ffmpeg
      - findutils  # Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
      - git
      - mas
      - openssl
      - rbenv # ruby. Just installs binaries - assumes you bring in the dotfiles.
      - readline
      - vim
      - wget
      - zsh

    zsh_path: /usr/local/bin/zsh

    home: "{{ lookup('env','HOME') }}"

    mas_installed_app_ids:
      - 443987910 # 1Password
      - 491200486 # iClarified
      - 405399194 # kindle
      - 604825918 # Valentina Studio
      - 603117688 # CCMenu
      - 407963104 # Pixelmator
      - 561995913 # Color maker
      - 937984704 # Amphetamine
      - 1039633667 # Irvue
      - 1037126344 # Apple Configurator 2
      - 803453959 # Slack
      
    mas_email: ""
    mas_password: ""

  roles:
    - name: geerlingguy.mas
      when: mas_installed_app_id

  tasks:

    - name: Check Homebrew is installed
      stat: path=/usr/local/bin/brew
      register: brew_installed

    - name: Install Homebrew
      shell: ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
      when: brew_installed.stat.exists == false

    - name: Instal required Homebrew Taps
      shell: brew tap {{ item }}
      with_items: brew_taps

    - name: Check homebrew-cask is installed
      stat: path=/usr/local/bin/brew-cask.rb
      register: brew_cask_installed

    - name: Install homebrew-cask
      shell: brew install brew-cask
      when: brew_cask_installed.stat.exists == false

    ### UTILS

    - name: Install libraries/utils with homebrew
      homebrew: name={{ item }} state=present
      with_items: brew_utils

    - name: Cleanup after brewing
      shell: brew cleanup


    ### APPZ

    - name: Check for installed apps(casks)
      shell: brew cask list | grep {{ item }}
      register: installed_applications
      with_items: applications
      ignore_errors: true

    - name: Install Apps with brew-cask
      shell: brew cask install {{ item }}
      with_items: applications
      when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"

    ### ZSH radness

    - name: Determine if zsh is default/current shell
      shell: echo $SHELL
      register: current_shell

    - name: Enable zsh in /etc/shells
      shell: sudo /bin/sh -c 'grep -q "{{ zsh_path }}" /etc/shells || echo "{{ zsh_path }}" >> /etc/shells'
      when: current_shell.stdout != '/usr/local/bin/zsh'
      #" unbreak my syntax highlighting...

    - name: Set zsh as default shell
      shell: chsh -s {{ zsh_path }}
      when: current_shell.stdout != '/usr/local/bin/zsh'
      sudo: true

    - name: Use GNU tools instead of osx counterparts (grep find etc)
      shell: echo 'export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH' >> ~/.zshrc


    - name: Install oh-my-zsh
      git: repo=https://github.com/robbyrussell/oh-my-zsh dest=~/.oh-my-zsh
      sudo: false
      when: install_oh_my_zsh == true
      tags: install_oh_my_zsh


    ### OSX SETTINGS

    - name: Configure System Settings
      script: scripts/system_settings.sh
      sudo: true
